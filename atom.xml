<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mustang</title>
  
  <subtitle>温欣</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jackLovewx.github.io/"/>
  <updated>2018-12-05T09:25:36.196Z</updated>
  <id>https://jackLovewx.github.io/</id>
  
  <author>
    <name>Mustang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue01_核心</title>
    <link href="https://jackLovewx.github.io/2018/12/05/Vue01-%E6%A0%B8%E5%BF%83/"/>
    <id>https://jackLovewx.github.io/2018/12/05/Vue01-核心/</id>
    <published>2018-12-05T06:10:32.000Z</published>
    <updated>2018-12-05T09:25:36.196Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue01-核心"><a href="#Vue01-核心" class="headerlink" title="Vue01_核心"></a>Vue01_核心</h2><h3 id="1，Vue的基本认识："><a href="#1，Vue的基本认识：" class="headerlink" title="1，Vue的基本认识："></a>1，Vue的基本认识：</h3><p>1）一位华裔前Google工程师(尤雨溪)开发的前端js库</p><p>2）作用: 动态构建用户界面</p><p>3）特点：</p><p>​    *遵循MVVM模式</p><p>​    *编码简洁, 体积小, 运行效率高, 移动/PC端开发</p><p>​    *它本身只关注UI, 可以轻松引入vue插件和其它第三库开发项目</p><p>4）与其他前端JS框架的关联</p><p>​    *借鉴angular的模板和数据绑定技术</p><p>​    *借鉴react的组件化和虚拟DOM技术</p><p>5） vue包含一系列的扩展插件(库):</p><pre><code>* vue-cli: vue脚手架* vue-resource(axios): ajax请求* vue-router: 路由* vuex: 状态管理* vue-lazyload: 图片懒加载* vue-scroller: 页面滑动相关* mint-ui: 基于vue的组件库(移动端)* element-ui: 基于vue的组件库(PC端)</code></pre><h3 id="2，Vue的基本使用"><a href="#2，Vue的基本使用" class="headerlink" title="2，Vue的基本使用"></a>2，Vue的基本使用</h3><p>1）效果：一个输入框，里面输入数据，下面显示相应的数据。</p><p>2）步骤：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1,引入vue.js</span></span><br><span class="line"><span class="comment">2,创建Vue实例，</span></span><br><span class="line"><span class="comment">      指定 el 选择器</span></span><br><span class="line"><span class="comment">           data</span></span><br><span class="line"><span class="comment">3，双向数据绑定： v-model</span></span><br><span class="line"><span class="comment">4，显示数据： &#123;&#123;username&#125;&#125;</span></span><br><span class="line"><span class="comment">5，理解 MVVM</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><p>3）代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"mustang"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;username&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    const vm = new Vue(&#123;</span></span><br><span class="line"><span class="undefined">        el: '#mustang',</span></span><br><span class="line"><span class="undefined">        data: &#123;</span></span><br><span class="line"><span class="undefined">            username: 'mustang'</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3，理解MVVM："><a href="#3，理解MVVM：" class="headerlink" title="3，理解MVVM："></a>3，理解MVVM：</h3><p><img src="/2018/12/05/Vue01-核心/2.png" alt="1543991188854"></p><h3 id="4，模板语法"><a href="#4，模板语法" class="headerlink" title="4，模板语法"></a>4，模板语法</h3><p>1）模板的理解：</p><p>​        动态的html页面</p><p>​        包含了一些Js语法代码：双大括号表达式和v-开头的指令</p><p>2）双大括号表达式：</p><p>​        语法： </p><p>​        功能：向页面输出数据</p><p>​        可以调用对象的方法</p><p>3）指令一：强制数据绑定</p><p>​        功能：指定变化的属性值</p><p>​        完整写法： v-bind:xxx=’yyy’</p><p>​        简洁语法： ：xxx=‘yyy’</p><p>4）指令二：绑定事件监听</p><p>​        完整写法：v-on:keyup=’xxx’       v-on:keyup=’xxx(参数)’     </p><p>​        简洁语法：@keyup=‘xxx’            @keyup.enter=’xxx’</p><p>5）示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--双大括号表达式的用法--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>双大括号表达式的用法<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;username&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;username.toUpperCase()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--强制数据绑定的用法--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>强制数据绑定的用法:将一个文本理解为一个表达式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"imgUrl"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--强制数据帮顶顶的用法--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>强制数据绑定的用法:绑定监听<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"hello"</span>&gt;</span>点击弹出<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"test('带参数的 Mustang')"</span>&gt;</span>点击弹出<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    const vm = new Vue(&#123;</span></span><br><span class="line"><span class="undefined">        el: '#app',</span></span><br><span class="line"><span class="undefined">        data: &#123;</span></span><br><span class="line"><span class="undefined">            username: 'Mustang',</span></span><br><span class="line"><span class="undefined">            imgUrl: 'http://img1.imgtn.bdimg.com/it/u=4016276316,619558019&amp;fm=26&amp;gp=0.jpg'</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        methods: &#123;</span></span><br><span class="line"><span class="undefined">            hello()&#123;</span></span><br><span class="line"><span class="undefined">                alert('Hello Mustang')</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            test(content)&#123;</span></span><br><span class="line"><span class="undefined">                alert(content)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5，计算属性和监视"><a href="#5，计算属性和监视" class="headerlink" title="5，计算属性和监视"></a>5，计算属性和监视</h3><p>1）计算属性：</p><p>​        在computed属性对象中定义计算属性的方法</p><p>​        在页面中使用 来显示计算的结果</p><p>2）    监视属性：</p><p>​        通过vm对象的$watch()或者watch配置来监视指定的属性</p><p>​        当属性变化时，回调函数会自动调用，在函数内部进行计算</p><p>3）计算属性高级：</p><p>​        通过getter/setter实现对属性数据的监视和显示</p><p>​        计算属性存在缓存，多次读取只进行一次getter计算</p><p>4）示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">    姓: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"First Name"</span> <span class="attr">v-model</span>=<span class="string">"firstName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Last Name"</span> <span class="attr">v-model</span>=<span class="string">"lastName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--fullName1是根据fistName和lastName计算产生--&gt;</span></span><br><span class="line">    姓名1(单向): <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Full Name1"</span> <span class="attr">v-model</span>=<span class="string">"fullName1"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    姓名2(单向): <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Full Name2"</span> <span class="attr">v-model</span>=<span class="string">"fullName2"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    姓名3(双向): <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Full Name3"</span> <span class="attr">v-model</span>=<span class="string">"fullName3"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    const vm = new Vue(&#123;</span></span><br><span class="line"><span class="undefined">        el: '#demo',</span></span><br><span class="line"><span class="undefined">        data: &#123;</span></span><br><span class="line"><span class="undefined">          firstName: 'wx',</span></span><br><span class="line"><span class="undefined">            lastName: 'lt',</span></span><br><span class="line"><span class="undefined">          fullName2: ''</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        computed: &#123;</span></span><br><span class="line"><span class="undefined">            fullName1()&#123;</span></span><br><span class="line"><span class="undefined">                return this.firstName+ '--'+this.lastName</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            fullName3: &#123;</span></span><br><span class="line"><span class="undefined">                //// 当获取当前属性值时自动调用, 将返回值(根据相关的其它属性数据)作为属性值</span></span><br><span class="line"><span class="undefined">                get()&#123;</span></span><br><span class="line"><span class="undefined">                    return this.firstName+ " " + this.lastName</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                // 当属性值发生了改变时自动调用, 监视当前属性值变化, 同步更新相关的其它属性值</span></span><br><span class="line"><span class="undefined">                set(value)&#123;</span></span><br><span class="line"><span class="undefined">                    const names = value.split(' ')</span></span><br><span class="line"><span class="undefined">                    this.firstName = names[0]</span></span><br><span class="line"><span class="undefined">                    this.lastName = names[1]</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        watch: &#123;</span></span><br><span class="line"><span class="undefined">            firstName: function (value) &#123;</span></span><br><span class="line"><span class="undefined">                this.fullName2 = value + '-'+this.lastName</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            lastName: function (value) &#123;</span></span><br><span class="line"><span class="undefined">                this.fullName2 = this.firstName + '-'+value</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Vue01-核心&quot;&gt;&lt;a href=&quot;#Vue01-核心&quot; class=&quot;headerlink&quot; title=&quot;Vue01_核心&quot;&gt;&lt;/a&gt;Vue01_核心&lt;/h2&gt;&lt;h3 id=&quot;1，Vue的基本认识：&quot;&gt;&lt;a href=&quot;#1，Vue的基本认识：&quot; class
      
    
    </summary>
    
      <category term="vue学习" scheme="https://jackLovewx.github.io/categories/vue%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="vue" scheme="https://jackLovewx.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Ansible10_roles详细介绍</title>
    <link href="https://jackLovewx.github.io/2018/12/04/Ansible10-roles%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D/"/>
    <id>https://jackLovewx.github.io/2018/12/04/Ansible10-roles详细介绍/</id>
    <published>2018-12-04T02:32:48.000Z</published>
    <updated>2018-12-04T05:43:50.610Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible10-roles详细介绍"><a href="#Ansible10-roles详细介绍" class="headerlink" title="Ansible10_roles详细介绍"></a>Ansible10_roles详细介绍</h2><h3 id="1-Roles-角色"><a href="#1-Roles-角色" class="headerlink" title="1,Roles:角色"></a>1,Roles:角色</h3><p>ansible自1.2版本引入的新特性，用于层次性，结构化的组织playbook，角色能够根据层次性结构自动转载变量文件</p><p>tasks以及handlers等，要使用角色只需在playbook中使用include指令即可，简单来讲，角色就是通过分别将变量，文件</p><p>任务，模板以及处理器放置于单独的目录中，并且可以快捷的include他们的一种机制，角色一般用于基于主机构建服务的</p><p>场景中，但是也可以用于构建守护进程等场景中。</p><p>复杂场景：建议使用roles，代码的复用度高</p><h3 id="2，Roles的目录结构"><a href="#2，Roles的目录结构" class="headerlink" title="2，Roles的目录结构"></a>2，Roles的目录结构</h3><p>每个角色，以特定的层级目录结构进行组织</p><h4 id="roles目录机构："><a href="#roles目录机构：" class="headerlink" title="roles目录机构："></a>roles目录机构：</h4><p>​    playbook.yml</p><p>​    roles/</p><p>​      project/</p><p>​        tasks:定义task，role的基本元素，至少包含一个名为main.yml的文件，其他文件在此文件中include包含</p><p>​        files:存放有copy或者script模块等调用的文件</p><p>​        vars:不常用，定义变量，至少有一个名为main.yml文件。</p><p>​        default:不常用，设定默认变量时，使用此目录中的main.yml文件</p><p>​        templates:template模块查找说需要的模板文件的目录</p><pre><code>handlers:至少有一个名为main.yml文件，其他文件用include包含</code></pre><p>​        meta:不常用，定义当前角色的特殊设定，及依赖关系，至少包含main.yml文件 </p><h3 id="3，角色应用的综合示例：以http服务器为例"><a href="#3，角色应用的综合示例：以http服务器为例" class="headerlink" title="3，角色应用的综合示例：以http服务器为例"></a>3，角色应用的综合示例：以http服务器为例</h3><p>1，mkdir roles</p><p>2，mkdir  app</p><p>3，mkdir tasks template vars handlers files</p><p>4，tree可以查看目录结构</p><p>tasks（任务）：</p><p>5，创建组：group 组名：app  系统组： system=yes gid=123 </p><p>6，创建用户：user  用户名：app 将用户添加到组中，系统用户， shell=/sbin/nologin</p><p>7，安装包：yum  包：httpd</p><p>8，拷贝一些模板文件：/etc/httpd/conf/http.conf 复制到 /templates下改名为 http.conf.j2</p><p>​      修改问价内容，该Listen为  该user为 </p><p>​      该group为 </p><p>9，准备变量文件 /var/main.yml ——–username: app   groupname: app</p><p>10,编写template.yml任务，  src dest</p><p>11，添加 handlers和 notify</p><p>12，启动服务</p><p>13，重启服务</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ansible10-roles详细介绍&quot;&gt;&lt;a href=&quot;#Ansible10-roles详细介绍&quot; class=&quot;headerlink&quot; title=&quot;Ansible10_roles详细介绍&quot;&gt;&lt;/a&gt;Ansible10_roles详细介绍&lt;/h2&gt;&lt;h3 i
      
    
    </summary>
    
      <category term="Ansible学习" scheme="https://jackLovewx.github.io/categories/Ansible%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Ansible" scheme="https://jackLovewx.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Ansible09_Playbook详细介绍</title>
    <link href="https://jackLovewx.github.io/2018/12/03/Ansible09-Playbook%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D/"/>
    <id>https://jackLovewx.github.io/2018/12/03/Ansible09-Playbook详细介绍/</id>
    <published>2018-12-03T08:29:15.000Z</published>
    <updated>2018-12-04T02:31:40.905Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible09-Playbook详细介绍"><a href="#Ansible09-Playbook详细介绍" class="headerlink" title="Ansible09_Playbook详细介绍"></a>Ansible09_Playbook详细介绍</h2><h3 id="一：playbook简介："><a href="#一：playbook简介：" class="headerlink" title="一：playbook简介："></a>一：playbook简介：</h3><p>1,playbook是由一个或者多个play组成的列表</p><p>2，play的主要作用在于将事先归并为一组的主机装扮成事先通过ansible的task定义好的角色</p><p>​      从根本上讲，所谓task无非是调用ansible的一个module，将多个play组织在一个playbook中，</p><p>​      可以让他们联同起来按事先编排的机制协同工作。</p><p>3，playbook采用的是yml语言编写</p><h3 id="二，playbook的工作流程："><a href="#二，playbook的工作流程：" class="headerlink" title="二，playbook的工作流程："></a>二，playbook的工作流程：</h3><p><img src="/2018/12/03/Ansible09-Playbook详细介绍/1.jpg" alt=""></p><p>1,流程解析：</p><p> 我们编写了一个playbook，然后去调用playbook，最终也是用ansible命令执行的，去调用一个一个的play，</p><p>当然每个play都有自己的任务，那么任务的执行本质来讲就是来调用模块，模块在执行的时候，要看看是针对</p><p>主机清单中的哪些主机执行的</p><p>2，如果说ansible的单个模块相当于linux中的单行命令，那么playbook就相当于脚本的概念，将许多命令放在</p><p>脚本里面，按照自己定义的顺序执行。</p><h3 id="三playbook的核心元素概览"><a href="#三playbook的核心元素概览" class="headerlink" title="三playbook的核心元素概览"></a>三playbook的核心元素概览</h3><p>1，hosts：执行的远程主机列表</p><p>2，tasks：任务集</p><p>3，varniables：内置变量或者自定义变量在playbook中调用</p><p>4，templates：模板，可替换模板文件中的变量，并实现一些简单逻辑的文件</p><p>5，Handlers:和notify配合使用，有特定的条件触发的操作，满足条件执行，否则就不执行</p><p>6，tags：标签，执行某任务的执行，用于选择playbook中部分代码，ansible具有幂等性，因此会自动跳过</p><p>​      没有变化的部分。</p><pre><code>eg： ansible-playbook -t tagname useradd.yml</code></pre><h3 id="四：playbook的基础组件"><a href="#四：playbook的基础组件" class="headerlink" title="四：playbook的基础组件"></a>四：playbook的基础组件</h3><p>1,hosts:</p><p>​    playbook中每一个play的目的都是为了让某一个或者某些主机以某个指定的用户身份执行任务，</p><p>​    hosts用于执行要执行的指定任务的主机，事先电仪在主机清单中。</p><p>   形式：</p><p>​    192.168.10.129或者192.168.10.*</p><p>​    webservers或者webservers:dbservers或者webservers&amp;appservers或者webservers:! appservers</p><p>2,remote_user:</p><p>​        可用于host和task中，也可以通过指定其sudo的方式在远程主机上执行任务</p><p>3，tasks：任务列表</p><p>使用ignore-errors来忽略错误信息。<img src="/2018/12/03/Ansible09-Playbook详细介绍/2.jpg" alt="1543827227812"></p><p>上图是一个基本的playbook的结构。</p><h3 id="五，运行playbook"><a href="#五，运行playbook" class="headerlink" title="五，运行playbook"></a>五，运行playbook</h3><p>1，方式： </p><p>​        ansible-playbook   xxxx.yml</p><p>2,常见选项：</p><p>​        –check  或者 -C :  只检查语法，不真正的运行</p><p>​        –list-hosts:列出运行任务的主机</p><p>​        –limit  主机列表：只针对主机列表中的主机执行</p><pre><code>-v：显示过程  --v显示详细的过程</code></pre><p>​    示例：</p><p>​        ansible-playbookl file.yml -C</p><p>​        ansible-playbook file,.yml</p><p>​        ansible-playbook file.yml –limit webservers</p><h3 id="六：handlers和notify结合使用触发条件"><a href="#六：handlers和notify结合使用触发条件" class="headerlink" title="六：handlers和notify结合使用触发条件"></a>六：handlers和notify结合使用触发条件</h3><p>1，handlers：相当于一个触发器</p><p>​      是task列表，这些task于之前task本质相同，用于关注的资源发生变化时，才会执行一定的操作</p><p>2，notify：此action可以用于在每个play的最后触发，这样可以避免多次有改变发生时，每次都执行的</p><p>​      操作，仅在所有的变化发生完成后一次性执行指定操作，在notify中列出的操作成为handler，即</p><p>​      notify中调用handler中定义的操作。 </p><h3 id="七，变量的使用："><a href="#七，变量的使用：" class="headerlink" title="七，变量的使用："></a>七，变量的使用：</h3><p>1， 变量名：仅能由字母，数字，下划线组成，且只能以字母开头。</p><p>2，变量的来源：</p><p>​    1，ansible的setup模块中，这些变量定义了本机的系统信息。</p><p>​          可以使用 ansible webservers -m setup -a ‘filter=<em>address</em>‘用过滤器查找相关的变量</p><p>​     2，在/etc/ansible/hosts中定义</p><p>​           普通变量：主机组中主机单独定义，优先级高于公共变量</p><p>​            公共变量：针对主机组中所有主机定义同一变量</p><p>​     3，通过命令行指定变量，优先级最高</p><pre><code>ansible-playbook -e varname=value</code></pre><p>​     4，在playbook中定义变量：</p><p>​        vars:</p><p>​                  var1: value1</p><p>​                 var2: value2</p><p>​     5，在角色中定义</p><p>3，变量的调用方式：</p><p>​    通过   来调用变量，变量名前后加空格。</p><p>4，变量的优先级：</p><p>​    -e &gt;  playbok &gt;  主机清单 定义的变量</p><h3 id="八：模板templates的使用"><a href="#八：模板templates的使用" class="headerlink" title="八：模板templates的使用"></a>八：模板templates的使用</h3><p>​    1，根据西永的配置文件状态，生成对用的文件</p><p>​    2，文本文件嵌套有Jinja2语言，使用字面量，有如下形式：</p><p>​        字符串：使用单引号或者双引号</p><p>​        数字：整数，浮点型</p><p>​        列表：[item1,item2,item…]</p><p>​        元组:(item1,item2,item…)</p><p>​        字典：{key:value,key2:value…}</p><p>​        布尔：true、false</p><p>​        算术运算： + - *  //  /  % </p><p>​        比较：==  !=  &gt;  &lt;  &gt;=  &lt;=</p><p>​        逻辑： and  or   not</p><p>​        for  if  when</p><p>​    3,when:条件测试：如果需要根据变量facts，或者此前任务的执行结果来作为某task执行与否的前提时，需要用到</p><p>​              通过when语句实现在task中，jinja2语法格式。在task后添加when子句即可使用条件测试</p><p>​         eg： - name: ‘shut down RedHat flavored systemc’</p><p>​            command: /sbin/shutdown  -h  now</p><p>​            when:  ansible -os_family == “RedHat”        </p><p>​    4,迭代：with_items</p><p>​       当有需要重复性的执行的任务时，可以使用迭代机制</p><p>​       对迭代项目的应用，固定变量名为item，要在task中使用with_items给定要迭代的元素列表</p><p>​        <img src="/2018/12/03/Ansible09-Playbook详细介绍/3png" alt="1543889853566"></p><p>​    eg:需求：创建三个用户将用户加到刚刚创建的组中。</p><p>​    <img src="/2018/12/03/Ansible09-Playbook详细介绍/4.png" alt="1543889947561"></p><p>​        </p><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ansible09-Playbook详细介绍&quot;&gt;&lt;a href=&quot;#Ansible09-Playbook详细介绍&quot; class=&quot;headerlink&quot; title=&quot;Ansible09_Playbook详细介绍&quot;&gt;&lt;/a&gt;Ansible09_Playbook详细
      
    
    </summary>
    
      <category term="Ansible学习" scheme="https://jackLovewx.github.io/categories/Ansible%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Ansible" scheme="https://jackLovewx.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Ansible08_ansible-console介绍</title>
    <link href="https://jackLovewx.github.io/2018/12/03/Ansible08-ansible-console%E4%BB%8B%E7%BB%8D/"/>
    <id>https://jackLovewx.github.io/2018/12/03/Ansible08-ansible-console介绍/</id>
    <published>2018-12-03T08:18:52.000Z</published>
    <updated>2018-12-03T08:25:02.309Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible08-ansible-console介绍"><a href="#Ansible08-ansible-console介绍" class="headerlink" title="Ansible08_ansible-console介绍"></a>Ansible08_ansible-console介绍</h2><h4 id="1-ansible2-0新增，可以交互执行命令"><a href="#1-ansible2-0新增，可以交互执行命令" class="headerlink" title="1.ansible2.0新增，可以交互执行命令"></a>1.ansible2.0新增，可以交互执行命令</h4><h4 id="2-root-test-2-f-10"><a href="#2-root-test-2-f-10" class="headerlink" title="2,root@test(2)[f:10] $"></a>2,root@test(2)[f:10] $</h4><p>解析：root为当前的执行用户，test为当前操作的主机组</p><pre><code>(2)为当前组的主机数量，[f:10] 10代表并发数</code></pre><h4 id="3，设置并发数：-eg：forks-n"><a href="#3，设置并发数：-eg：forks-n" class="headerlink" title="3，设置并发数： eg：forks  n"></a>3，设置并发数： eg：forks  n</h4><h4 id="4-切换组：-cd-主机组-eg：cd-webservers"><a href="#4-切换组：-cd-主机组-eg：cd-webservers" class="headerlink" title="4,切换组：  cd  主机组  eg：cd webservers"></a>4,切换组：  cd  主机组  eg：cd webservers</h4><h4 id="5，列出所有的内置命令-或者help"><a href="#5，列出所有的内置命令-或者help" class="headerlink" title="5，列出所有的内置命令  ? 或者help"></a>5，列出所有的内置命令  ? 或者help</h4><h4 id="6-列出当前组的主机列表：list"><a href="#6-列出当前组的主机列表：list" class="headerlink" title="6,列出当前组的主机列表：list"></a>6,列出当前组的主机列表：list</h4><h4 id="6，示例："><a href="#6，示例：" class="headerlink" title="6，示例："></a>6，示例：</h4><h3 id="root-all-2-f-5-list"><a href="#root-all-2-f-5-list" class="headerlink" title="root@all(2)[f:5]$ list"></a>root@all(2)[f:5]$ list</h3><h3 id="root-all-2-f-5-cd-webservers"><a href="#root-all-2-f-5-cd-webservers" class="headerlink" title="root@all(2)[f:5]$ cd webservers"></a>root@all(2)[f:5]$ cd webservers</h3><h3 id="root-all-2-f-5-yum-name-httpd-state-present"><a href="#root-all-2-f-5-yum-name-httpd-state-present" class="headerlink" title="root@all(2)[f:5]$ yum name=httpd state=present"></a>root@all(2)[f:5]$ yum name=httpd state=present</h3><h3 id="root-all-2-f-5-service-name-httpd-state-started"><a href="#root-all-2-f-5-service-name-httpd-state-started" class="headerlink" title="root@all(2)[f:5]$ service name=httpd state=started"></a>root@all(2)[f:5]$ service name=httpd state=started</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ansible08-ansible-console介绍&quot;&gt;&lt;a href=&quot;#Ansible08-ansible-console介绍&quot; class=&quot;headerlink&quot; title=&quot;Ansible08_ansible-console介绍&quot;&gt;&lt;/a&gt;Ansib
      
    
    </summary>
    
      <category term="Ansible学习" scheme="https://jackLovewx.github.io/categories/Ansible%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Ansible" scheme="https://jackLovewx.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Ansible07_Ansible-vault介绍</title>
    <link href="https://jackLovewx.github.io/2018/12/03/Ansible07-Ansible-vault%E4%BB%8B%E7%BB%8D/"/>
    <id>https://jackLovewx.github.io/2018/12/03/Ansible07-Ansible-vault介绍/</id>
    <published>2018-12-03T08:13:24.000Z</published>
    <updated>2018-12-03T08:16:52.182Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible07-Ansible-vault介绍"><a href="#Ansible07-Ansible-vault介绍" class="headerlink" title="Ansible07_Ansible-vault介绍"></a>Ansible07_Ansible-vault介绍</h2><h3 id="1，功能：管理加密解密yml文件的"><a href="#1，功能：管理加密解密yml文件的" class="headerlink" title="1，功能：管理加密解密yml文件的"></a>1，功能：管理加密解密yml文件的</h3><h3 id="2，相关命令："><a href="#2，相关命令：" class="headerlink" title="2，相关命令："></a>2，相关命令：</h3><h4 id="加密：ansible-vault-encrypt-hello-yml"><a href="#加密：ansible-vault-encrypt-hello-yml" class="headerlink" title="加密：ansible-vault encrypt hello.yml"></a>加密：ansible-vault encrypt hello.yml</h4><h4 id="解密：ansible-vault-decrypt-hello-yml"><a href="#解密：ansible-vault-decrypt-hello-yml" class="headerlink" title="解密：ansible-vault decrypt hello.yml"></a>解密：ansible-vault decrypt hello.yml</h4><h4 id="查看：ansible-vault-view-hello-yml"><a href="#查看：ansible-vault-view-hello-yml" class="headerlink" title="查看：ansible-vault view hello.yml"></a>查看：ansible-vault view hello.yml</h4><h4 id="编辑加密文件：ansible-vault-edithello-yml"><a href="#编辑加密文件：ansible-vault-edithello-yml" class="headerlink" title="编辑加密文件：ansible-vault edithello.yml"></a>编辑加密文件：ansible-vault edithello.yml</h4><h4 id="修改口令：ansible-vault-rekey-hello-yml"><a href="#修改口令：ansible-vault-rekey-hello-yml" class="headerlink" title="修改口令：ansible-vault rekey hello.yml"></a>修改口令：ansible-vault rekey hello.yml</h4><h4 id="创建新文件：ansible-vault-create-hello-yml"><a href="#创建新文件：ansible-vault-create-hello-yml" class="headerlink" title="创建新文件：ansible-vault create hello.yml"></a>创建新文件：ansible-vault create hello.yml</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ansible07-Ansible-vault介绍&quot;&gt;&lt;a href=&quot;#Ansible07-Ansible-vault介绍&quot; class=&quot;headerlink&quot; title=&quot;Ansible07_Ansible-vault介绍&quot;&gt;&lt;/a&gt;Ansible07_A
      
    
    </summary>
    
      <category term="Ansible学习" scheme="https://jackLovewx.github.io/categories/Ansible%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Ansible" scheme="https://jackLovewx.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Ansible06_galaxy介绍</title>
    <link href="https://jackLovewx.github.io/2018/12/03/Ansible06-galaxy%E4%BB%8B%E7%BB%8D/"/>
    <id>https://jackLovewx.github.io/2018/12/03/Ansible06-galaxy介绍/</id>
    <published>2018-12-03T08:08:26.000Z</published>
    <updated>2018-12-03T08:12:40.785Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible06-galaxy介绍"><a href="#Ansible06-galaxy介绍" class="headerlink" title="Ansible06_galaxy介绍"></a>Ansible06_galaxy介绍</h2><p>1，ansible-falaxy：链接ansible网络的一个工具</p><p>2，链接<a href="https://galaxy.ansible.com" target="_blank" rel="noopener">https://galaxy.ansible.com</a> 下载对应的roles</p><p>3，安装：</p><p>​        ansible-galaxy install geerlingguy.redis  下载之后会提示下载到哪个目录了在最后一行</p><p>4，删除galaxy：</p><pre><code>ansible-galaxy remove geerlingguy.redis</code></pre><h3 id="总结：可以联网下载自己所需的角色，下载之后可以改成自己能用的"><a href="#总结：可以联网下载自己所需的角色，下载之后可以改成自己能用的" class="headerlink" title="总结：可以联网下载自己所需的角色，下载之后可以改成自己能用的"></a>总结：可以联网下载自己所需的角色，下载之后可以改成自己能用的</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ansible06-galaxy介绍&quot;&gt;&lt;a href=&quot;#Ansible06-galaxy介绍&quot; class=&quot;headerlink&quot; title=&quot;Ansible06_galaxy介绍&quot;&gt;&lt;/a&gt;Ansible06_galaxy介绍&lt;/h2&gt;&lt;p&gt;1，ansi
      
    
    </summary>
    
      <category term="Ansible学习" scheme="https://jackLovewx.github.io/categories/Ansible%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Ansible" scheme="https://jackLovewx.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Ansible05_常用模块详细介绍</title>
    <link href="https://jackLovewx.github.io/2018/12/03/Ansible05-%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D/"/>
    <id>https://jackLovewx.github.io/2018/12/03/Ansible05-常用模块详细介绍/</id>
    <published>2018-12-03T06:57:52.000Z</published>
    <updated>2018-12-04T05:52:27.550Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible05-常用模块详细介绍"><a href="#Ansible05-常用模块详细介绍" class="headerlink" title="Ansible05_常用模块详细介绍"></a>Ansible05_常用模块详细介绍</h2><p>首先介绍一下ansible命令的格式写法：</p><h3 id="ansible-all-m-command-a-‘-xxxxxxx-‘"><a href="#ansible-all-m-command-a-‘-xxxxxxx-‘" class="headerlink" title="ansible    all     -m    command   -a   ‘ xxxxxxx ‘"></a>ansible    all     -m    command   -a   ‘ xxxxxxx ‘</h3><p>all：代表的是所有的被控端，all也可以替换成为部分被控端的组的名称</p><p>-m：指定要用哪个模块</p><p>command：默认模块，可以忽略不写</p><p>‘xxxxx’：代表的是要执行的命令  比如：  ls  /data/      ‘df -h’  查看分区利用率</p><h3 id="注：Ansible所有的模块我们在使用的时候都可以通过-ansible-doc-模块名-来查询相应的用法"><a href="#注：Ansible所有的模块我们在使用的时候都可以通过-ansible-doc-模块名-来查询相应的用法" class="headerlink" title="注：Ansible所有的模块我们在使用的时候都可以通过 ansible-doc  模块名   来查询相应的用法"></a>注：Ansible所有的模块我们在使用的时候都可以通过 ansible-doc  模块名   来查询相应的用法</h3><h3 id="1，Command模块："><a href="#1，Command模块：" class="headerlink" title="1，Command模块："></a>1，Command模块：</h3><p>参数： </p><p>​      chdir：切换到某一个文件夹再执行命令</p><p>​      creates：如果后该参数后面跟一个文件或者文件夹，如果存在，将不执行后面的命令</p><p>​      removes：如果该参数和面跟一个文件或者文件夹，如果不存在，将不执行和面的命令</p><p>不支持的条件：<br>      此命令不支持命令中带有  |   $  变量   &lt;   &gt;  &amp;  等等 得使用shell模块实现</p><h3 id="2，Shell模块："><a href="#2，Shell模块：" class="headerlink" title="2，Shell模块："></a>2，Shell模块：</h3><p>参数：</p><p>​        和command类似</p><p>eg：</p><p>​         ansible all -m shell -a ‘ps aux grep|nginx’</p><h3 id="3-Script-运行脚本的模块"><a href="#3-Script-运行脚本的模块" class="headerlink" title="3,Script:运行脚本的模块"></a>3,Script:运行脚本的模块</h3><h4 id="tips：在编写脚本的时候，应该遵循规范在第一行加上：-bin-bash"><a href="#tips：在编写脚本的时候，应该遵循规范在第一行加上：-bin-bash" class="headerlink" title="tips：在编写脚本的时候，应该遵循规范在第一行加上：   #!/bin/bash"></a>tips：在编写脚本的时候，应该遵循规范在第一行加上：   #!/bin/bash</h4><h4 id="eg-echo-hostname-gt-test-sh"><a href="#eg-echo-hostname-gt-test-sh" class="headerlink" title="eg:    echo hostname &gt; test.sh"></a>eg:    echo hostname &gt; test.sh</h4><h4 id="chmod-x-test-sh"><a href="#chmod-x-test-sh" class="headerlink" title="chmod +x test.sh"></a>chmod +x test.sh</h4><h4 id="ansible-all-m-script-a-‘-test-sh’"><a href="#ansible-all-m-script-a-‘-test-sh’" class="headerlink" title="ansible all - m script -a ‘./test.sh’"></a>ansible all - m script -a ‘./test.sh’</h4><h3 id="4-copy模块：从主控端复制文件到被控端"><a href="#4-copy模块：从主控端复制文件到被控端" class="headerlink" title="4.copy模块：从主控端复制文件到被控端"></a>4.copy模块：从主控端复制文件到被控端</h3><p>ansible all -m copy -a ‘src=/root/test.sh dest=/tmp/test.sh backup=yes’</p><h4 id="参数："><a href="#参数：" class="headerlink" title="参数："></a>参数：</h4><pre><code>src:主控端的路径</code></pre><p>​        dest:要复制到被控端的文件路径</p><p>​    backup=yes：将原来的文件做一个备份，如果目标存在先进行备份再复制</p><h3 id="5，fetch模块："><a href="#5，fetch模块：" class="headerlink" title="5，fetch模块："></a>5，fetch模块：</h3><p>从被控端取文件到主控端与copy相反：</p><p>但是只能抓取被控端的一个文件，如果想抓取多个，将多个文件进行打包再fetch过来，</p><h4 id="命令格式："><a href="#命令格式：" class="headerlink" title="命令格式："></a>命令格式：</h4><h4 id="抓取：ansible-all-m-fetch-a-‘src-root-log-tar-xz-dest-data-‘"><a href="#抓取：ansible-all-m-fetch-a-‘src-root-log-tar-xz-dest-data-‘" class="headerlink" title="抓取：ansible all -m ==fetch== -a ‘src=/root/log.tar.xz dest=/data/‘"></a>抓取：ansible all -m ==fetch== -a ‘src=/root/log.tar.xz dest=/data/‘</h4><h4 id="打包：ansible-all-m-shell-a-‘tar-Jcf-log-tar-xz-var-log-log’"><a href="#打包：ansible-all-m-shell-a-‘tar-Jcf-log-tar-xz-var-log-log’" class="headerlink" title="打包：ansible all -m shell -a ‘tar Jcf log.tar.xz   /var/log/*.log’"></a>打包：ansible all -m shell -a ‘tar Jcf log.tar.xz   /var/log/*.log’</h4><h4 id="预览：tar-tvf-log-tar-xz"><a href="#预览：tar-tvf-log-tar-xz" class="headerlink" title="预览：tar tvf log.tar.xz"></a>预览：tar tvf log.tar.xz</h4><h3 id="6-File模块：设置文件的属性"><a href="#6-File模块：设置文件的属性" class="headerlink" title="6,File模块：设置文件的属性"></a>6,File模块：设置文件的属性</h3><h4 id="创建一个文件：ansible-all-m-file-a-‘path-root-test-owner-wx-state-touch-’"><a href="#创建一个文件：ansible-all-m-file-a-‘path-root-test-owner-wx-state-touch-’" class="headerlink" title="创建一个文件：ansible all -m file -a ‘path=/root/test owner=wx ==state=touch==’"></a>创建一个文件：ansible all -m file -a ‘path=/root/test owner=wx ==state=touch==’</h4><h4 id="删除一个文件：ansible-all-m-file-a-‘path-root-test-state-absent’"><a href="#删除一个文件：ansible-all-m-file-a-‘path-root-test-state-absent’" class="headerlink" title="删除一个文件：ansible all -m file -a ‘path=/root/test ==state=absent’=="></a>删除一个文件：ansible all -m file -a ‘path=/root/test ==state=absent’==</h4><h4 id="创建一文件夹：ansible-all-m-file-a-‘path-root-test-state-directory-’"><a href="#创建一文件夹：ansible-all-m-file-a-‘path-root-test-state-directory-’" class="headerlink" title="创建一文件夹：ansible all -m file -a ‘path=/root/test ==state=directory==’"></a>创建一文件夹：ansible all -m file -a ‘path=/root/test ==state=directory==’</h4><h4 id="复制文件到被控端：ansible-all-m-file-a-‘-src-app-test-file-dest-app-test-file-’"><a href="#复制文件到被控端：ansible-all-m-file-a-‘-src-app-test-file-dest-app-test-file-’" class="headerlink" title="复制文件到被控端：ansible all -m file -a ‘==src=/app/test/file dest=/app/test/file==’"></a>复制文件到被控端：ansible all -m file -a ‘==src=/app/test/file dest=/app/test/file==’</h4><h3 id="7-hostname模块-管理主机名"><a href="#7-hostname模块-管理主机名" class="headerlink" title="7,hostname模块:管理主机名"></a>7,hostname模块:管理主机名</h3><h4 id="eg-ansible-192-168-10-129-m-hostname-a-‘-name-hostOne’"><a href="#eg-ansible-192-168-10-129-m-hostname-a-‘-name-hostOne’" class="headerlink" title="eg:    ansible 192.168.10.129 -m ==hostname== -a ‘==name===hostOne’"></a>eg:    ansible 192.168.10.129 -m ==hostname== -a ‘==name===hostOne’</h4><h3 id="8，Cron模块：计划任务"><a href="#8，Cron模块：计划任务" class="headerlink" title="8，Cron模块：计划任务"></a>8，Cron模块：计划任务</h3><h4 id="先查询广播路径：-which-wall-—-gt-usr-bin-wall"><a href="#先查询广播路径：-which-wall-—-gt-usr-bin-wall" class="headerlink" title="先查询广播路径： which wall  —&gt;/usr/bin/wall"></a>先查询广播路径： which wall  —&gt;/usr/bin/wall</h4><h4 id="支持时间：-minute-hour-day-month-weekday"><a href="#支持时间：-minute-hour-day-month-weekday" class="headerlink" title="支持时间： minute  hour day month weekday"></a>支持时间： minute  hour day month weekday</h4><h4 id="命令："><a href="#命令：" class="headerlink" title="命令："></a>命令：</h4><h4 id="创建名为name的任务-：ansible-all-m-cron-a-‘minute-job-”-usr-bin-wall”-NBA-Warning-name-warningcron’"><a href="#创建名为name的任务-：ansible-all-m-cron-a-‘minute-job-”-usr-bin-wall”-NBA-Warning-name-warningcron’" class="headerlink" title="创建名为name的任务 ：ansible all  -m cron -a ‘minute=* job=”/usr/bin/wall” NBA Warning name=warningcron’"></a>创建名为name的任务 ：ansible all  -m cron -a ‘minute=* job=”/usr/bin/wall” NBA Warning name=warningcron’</h4><h4 id="禁用任务：ansible-all-m-cron-a-‘-disabled-true-job-”-usr-bin-wall-NBA-Warning”-name-warningcron’"><a href="#禁用任务：ansible-all-m-cron-a-‘-disabled-true-job-”-usr-bin-wall-NBA-Warning”-name-warningcron’" class="headerlink" title="禁用任务：ansible all -m cron -a ‘==disabled=true== job=”/usr/bin/wall NBA Warning” name=warningcron’"></a>禁用任务：ansible all -m cron -a ‘==disabled=true== job=”/usr/bin/wall NBA Warning” name=warningcron’</h4><h4 id="启用任务：将上面的disabled改为false即可"><a href="#启用任务：将上面的disabled改为false即可" class="headerlink" title="启用任务：将上面的disabled改为false即可"></a>启用任务：将上面的disabled改为false即可</h4><h4 id="删除任务：ansible-all-m-cron-a-‘job-”-usr-bin-wall-NBAWarning”-name-warincron-state-absent-’"><a href="#删除任务：ansible-all-m-cron-a-‘job-”-usr-bin-wall-NBAWarning”-name-warincron-state-absent-’" class="headerlink" title="删除任务：ansible all -m cron -a ‘job=”/usr/bin/wall NBAWarning” name=warincron ==state=absent==’"></a>删除任务：ansible all -m cron -a ‘job=”/usr/bin/wall NBAWarning” name=warincron ==state=absent==’</h4><h4 id="查看任务：crontab-e"><a href="#查看任务：crontab-e" class="headerlink" title="查看任务：crontab  -e"></a>查看任务：crontab  -e</h4><h3 id="9-yum模块：管理包"><a href="#9-yum模块：管理包" class="headerlink" title="9,yum模块：管理包"></a>9,yum模块：管理包</h3><h4 id="前提：被控端都有yum3，检查yum仓库"><a href="#前提：被控端都有yum3，检查yum仓库" class="headerlink" title="前提：被控端都有yum3，检查yum仓库"></a>前提：被控端都有yum3，检查yum仓库</h4><p>/etc/yum.repos.d/base.repo</p><h4 id="安装：ansible-all-m-yum-a-‘name-httpd’"><a href="#安装：ansible-all-m-yum-a-‘name-httpd’" class="headerlink" title="安装：ansible all -m yum -a ‘name=httpd’"></a>安装：ansible all -m yum -a ‘name=httpd’</h4><h4 id="查看一已经安装的包：ansible-all-m-yum-a-‘list-installed’"><a href="#查看一已经安装的包：ansible-all-m-yum-a-‘list-installed’" class="headerlink" title="查看一已经安装的包：ansible all -m yum -a ‘list=installed’"></a>查看一已经安装的包：ansible all -m yum -a ‘list=installed’</h4><h4 id="卸载包：ansible-all-m-yum-a-‘name-httpd-state-absent-’"><a href="#卸载包：ansible-all-m-yum-a-‘name-httpd-state-absent-’" class="headerlink" title="卸载包：ansible all -m yum -a ‘name=httpd ==state=absent==’"></a>卸载包：ansible all -m yum -a ‘name=httpd ==state=absent==’</h4><h4 id="查看是否卸载了：ansible-all-m-shell-a-‘rpm-q-httpd’"><a href="#查看是否卸载了：ansible-all-m-shell-a-‘rpm-q-httpd’" class="headerlink" title="查看是否卸载了：ansible all -m shell -a ‘rpm -q httpd’"></a>查看是否卸载了：ansible all -m shell -a ‘rpm -q httpd’</h4><p>如果要安装多个包使用逗号隔开即可</p><p>yum更新缓存：update_cache=yes</p><h3 id="10-service模块：管理服务"><a href="#10-service模块：管理服务" class="headerlink" title="10,service模块：管理服务"></a>10,service模块：管理服务</h3><p>state:代表状态，状态不同服务也不同</p><p>enabled:代表的是开机是否自启动</p><h4 id="开启服务-ansible-all-m-service-a-‘name-httpd-state-started-enabled-yes’"><a href="#开启服务-ansible-all-m-service-a-‘name-httpd-state-started-enabled-yes’" class="headerlink" title="开启服务:ansible  all -m service -a ‘name=httpd state=started enabled=yes’"></a>开启服务:ansible  all -m service -a ‘name=httpd state=started enabled=yes’</h4><h4 id="停止服务：ansible-all-m-service-a-‘name-httpd-state-restarted’"><a href="#停止服务：ansible-all-m-service-a-‘name-httpd-state-restarted’" class="headerlink" title="停止服务：ansible  all -m service -a ‘name=httpd state=restarted’"></a>停止服务：ansible  all -m service -a ‘name=httpd state=restarted’</h4><h4 id="重启服务：ansible-all-m-service-a-‘name-httpd-state-stopped’"><a href="#重启服务：ansible-all-m-service-a-‘name-httpd-state-stopped’" class="headerlink" title="重启服务：ansible  all -m service -a ‘name=httpd state=stopped’"></a>重启服务：ansible  all -m service -a ‘name=httpd state=stopped’</h4><h4 id="确认开机是否自启动了：-systemctl-is-enabled-httpd"><a href="#确认开机是否自启动了：-systemctl-is-enabled-httpd" class="headerlink" title="确认开机是否自启动了：  systemctl  is-enabled httpd"></a>确认开机是否自启动了：  systemctl  is-enabled httpd</h4><h4 id="确认是否启动了：systemctl-status-httpd"><a href="#确认是否启动了：systemctl-status-httpd" class="headerlink" title="确认是否启动了：systemctl status httpd"></a>确认是否启动了：systemctl status httpd</h4><h3 id="11-user模块-管理用户"><a href="#11-user模块-管理用户" class="headerlink" title="11,user模块:管理用户"></a>11,user模块:管理用户</h3><h4 id="创建一个用户：ansible-all-m-user-a-‘name-wenxin-shell-sbin-nologin-system-yes-groups-root-uid-80’"><a href="#创建一个用户：ansible-all-m-user-a-‘name-wenxin-shell-sbin-nologin-system-yes-groups-root-uid-80’" class="headerlink" title="创建一个用户：ansible all -m user -a ‘name=wenxin shell=/sbin/nologin system=yes groups=root uid=80’"></a>创建一个用户：ansible all -m user -a ‘name=wenxin shell=/sbin/nologin system=yes groups=root uid=80’</h4><h4 id="查看用户：ansible-all-a-‘getent-passwd-wenxin’"><a href="#查看用户：ansible-all-a-‘getent-passwd-wenxin’" class="headerlink" title="查看用户：ansible all -a ‘getent passwd wenxin’"></a>查看用户：ansible all -a ‘getent passwd wenxin’</h4><h4 id="删除用户：-ansible-all-m-user-a-‘name-wenixn-state-absent’"><a href="#删除用户：-ansible-all-m-user-a-‘name-wenixn-state-absent’" class="headerlink" title="删除用户： ansible all -m user -a ‘name=wenixn state=absent’"></a>删除用户： ansible all -m user -a ‘name=wenixn state=absent’</h4><h3 id="12-group模块：管理组"><a href="#12-group模块：管理组" class="headerlink" title="12.group模块：管理组"></a>12.group模块：管理组</h3><h4 id="创建组：-ansible-all-m-group-a-‘name-nginx-system-yes-gid-82’"><a href="#创建组：-ansible-all-m-group-a-‘name-nginx-system-yes-gid-82’" class="headerlink" title="创建组： ansible all -m group -a ‘name=nginx system=yes gid=82’"></a>创建组： ansible all -m group -a ‘name=nginx system=yes gid=82’</h4><h4 id="验证：ansible-all-m-shel-a-‘getent-group-nginx’"><a href="#验证：ansible-all-m-shel-a-‘getent-group-nginx’" class="headerlink" title="验证：ansible all -m shel -a ‘getent group nginx’"></a>验证：ansible all -m shel -a ‘getent group nginx’</h4><h4 id="删除：ansible-all-m-group-a-‘name-nginx-state-absent’"><a href="#删除：ansible-all-m-group-a-‘name-nginx-state-absent’" class="headerlink" title="删除：ansible all =m group -a ‘name=nginx state=absent’"></a>删除：ansible all =m group -a ‘name=nginx state=absent’</h4><h3 id="13ping模块："><a href="#13ping模块：" class="headerlink" title="13ping模块："></a>13ping模块：</h3><h4 id="检查主控端和被控端的连通性"><a href="#检查主控端和被控端的连通性" class="headerlink" title="检查主控端和被控端的连通性"></a>检查主控端和被控端的连通性</h4><h4 id="命令：ansible-all-m-ping"><a href="#命令：ansible-all-m-ping" class="headerlink" title="命令：ansible all -m ping"></a>命令：ansible all -m ping</h4><h3 id="14-总结：ansible中的模块有1000多个我只是学了常用的13个模块，如果想要学习新的模块可以到官网。"><a href="#14-总结：ansible中的模块有1000多个我只是学了常用的13个模块，如果想要学习新的模块可以到官网。" class="headerlink" title="14,总结：ansible中的模块有1000多个我只是学了常用的13个模块，如果想要学习新的模块可以到官网。"></a>14,总结：ansible中的模块有1000多个我只是学了常用的13个模块，如果想要学习新的模块可以到官网。</h3><h3 id="平时在学习的过程中可以使用：-ansible-doc-s-模块名-来看看这个模块怎么用。"><a href="#平时在学习的过程中可以使用：-ansible-doc-s-模块名-来看看这个模块怎么用。" class="headerlink" title="平时在学习的过程中可以使用：  ansible-doc    -s     模块名   来看看这个模块怎么用。"></a>平时在学习的过程中可以使用：  ansible-doc    -s     模块名   来看看这个模块怎么用。</h3><p>#### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ansible05-常用模块详细介绍&quot;&gt;&lt;a href=&quot;#Ansible05-常用模块详细介绍&quot; class=&quot;headerlink&quot; title=&quot;Ansible05_常用模块详细介绍&quot;&gt;&lt;/a&gt;Ansible05_常用模块详细介绍&lt;/h2&gt;&lt;p&gt;首先介绍一下
      
    
    </summary>
    
      <category term="Ansible学习" scheme="https://jackLovewx.github.io/categories/Ansible%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Ansible" scheme="https://jackLovewx.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>test2</title>
    <link href="https://jackLovewx.github.io/2018/11/29/test2/"/>
    <id>https://jackLovewx.github.io/2018/11/29/test2/</id>
    <published>2018-11-29T09:09:12.000Z</published>
    <updated>2018-11-29T09:09:12.588Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ansible02_运维自动化之ansible</title>
    <link href="https://jackLovewx.github.io/2018/11/27/Ansible02-%E8%BF%90%E7%BB%B4%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B9%8Bansible/"/>
    <id>https://jackLovewx.github.io/2018/11/27/Ansible02-运维自动化之ansible/</id>
    <published>2018-11-27T14:15:24.000Z</published>
    <updated>2018-11-29T09:24:45.228Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible02-配置文件及命令概览"><a href="#Ansible02-配置文件及命令概览" class="headerlink" title="Ansible02_配置文件及命令概览"></a>Ansible02_配置文件及命令概览</h2><h3 id="1-Ansible-一个主机控制多台主机"><a href="#1-Ansible-一个主机控制多台主机" class="headerlink" title="1,Ansible:一个主机控制多台主机"></a>1,Ansible:一个主机控制多台主机</h3><p>这个主机被称为：主控端</p><p>被控制的多台主机称为：被控端</p><h3 id="2，Ansible特性"><a href="#2，Ansible特性" class="headerlink" title="2，Ansible特性"></a>2，Ansible特性</h3><p>模块化：调用特定的模块完成特定的任务</p><p>基于Python语言实现</p><p>部署简单</p><p>安全：基于OpenSession</p><p>支持Playbook任务编排</p><p>幂等性：一个任务执行一遍和执行N遍的效果是一样的，不因重复发的执行带来意外的情况</p><p>无需代理，不依赖KPI</p><h3 id="3，Ansible架构图："><a href="#3，Ansible架构图：" class="headerlink" title="3，Ansible架构图："></a>3，Ansible架构图：</h3><p><img src="/2018/11/27/Ansible02-运维自动化之ansible/1.png" alt=""></p><p><img src="/2018/11/27/Ansible02-运维自动化之ansible/2.png" alt=""></p><h3 id="4-Ansible的主要组成部分"><a href="#4-Ansible的主要组成部分" class="headerlink" title="4,Ansible的主要组成部分"></a>4,Ansible的主要组成部分</h3><p>​    1，PlayBooks:任务剧本，编排任务集的配置文件，由ansible顺序执行，通常是Json格式的yml文件</p><p>​    2，Inventory：管理主机清单  /etc./ansible/hosts</p><p>​    3，Modules:Ansible执行命令的功能模块</p><p>​    4，plugins：模块功能的补充</p><p>​    5，API：供第三方程序调用的借口</p><p>​    6，Ansible：ansible的命令工具</p><h3 id="5，Ansible的安装："><a href="#5，Ansible的安装：" class="headerlink" title="5，Ansible的安装："></a>5，Ansible的安装：</h3><p>​    yum install ansible</p><p>如果在执行ansible的命令时报错：</p><p>ERROR! Unexpected Exception, this is probably a bug: (cryptography 0.8.2 (/usr/lib64/python2.7/site-packages), Requirement.parse(‘cryptography&gt;=1.1‘)) </p><p>解决方案：</p><p>删除列出的软件包，重新安装ansible即可</p><h4 id="root-kazihuo-rpm-qa-grep-python-crypto"><a href="#root-kazihuo-rpm-qa-grep-python-crypto" class="headerlink" title="[root@kazihuo ~]# rpm -qa |grep python-crypto"></a>[root@kazihuo ~]# rpm -qa |grep python-crypto</h4><p>[root@kazihuo ~]# yum -y remove python-cryptography</p><p>[root@kazihuo ~]# yum -y install ansible</p><h3 id="6，Ansible相关配置文件："><a href="#6，Ansible相关配置文件：" class="headerlink" title="6，Ansible相关配置文件："></a>6，Ansible相关配置文件：</h3><p>/etc/ansible/ansible.cfg：主配置文件</p><p>/etc/ansible/hosts：主机清单配置文件</p><p>​    风格：  [webservers]</p><p>​             192.168.10.128                    </p><p>​             192.168.10.129            或者 9 192.168.10.12[….]</p><p>​             192.168.10.130</p><p>/etc/ansible/roles：存放角色目录 </p><h3 id="7-程序："><a href="#7-程序：" class="headerlink" title="7.程序："></a>7.程序：</h3><p>/usr/bin/ansible：主程序，临时命令的执行工具</p><p>/usr/bin/ansible-doc：查看配置文档，模块功能查看工具</p><p>/usr/bin/ansible-galaxy：下载/上传代码</p><p>/usr/bin/ansible-playbook：定制自动化服务</p><p>/usr/bin/ansible-vault：文件加密工具</p><p>/usr/bin/ansible-console：基于console界面与用户交互的执行工具</p><h3 id="8-Ansible配置文件-etc-ansible-ansible-cfg"><a href="#8-Ansible配置文件-etc-ansible-ansible-cfg" class="headerlink" title="8,Ansible配置文件 /etc/ansible/ansible.cfg"></a>8,Ansible配置文件 /etc/ansible/ansible.cfg</h3><h4 id="invengory-etc-ansible-hosts-主机列表配置文件"><a href="#invengory-etc-ansible-hosts-主机列表配置文件" class="headerlink" title="#invengory=etc/ansible/hosts   #主机列表配置文件"></a>#invengory=etc/ansible/hosts   #主机列表配置文件</h4><h4 id="libraay-usr-share-my-modules-库文件的存放目录"><a href="#libraay-usr-share-my-modules-库文件的存放目录" class="headerlink" title="#libraay=/usr/share/my-modules/     #库文件的存放目录"></a>#libraay=/usr/share/my-modules/     #库文件的存放目录</h4><h4 id="remote-tmp-HOME-ansible-tmp-临时py命令存放在远程主机目录"><a href="#remote-tmp-HOME-ansible-tmp-临时py命令存放在远程主机目录" class="headerlink" title="#remote_tmp=$HOME/.ansible/tmp    #临时py命令存放在远程主机目录"></a>#remote_tmp=$HOME/.ansible/tmp    #临时py命令存放在远程主机目录</h4><h4 id="local-tmp-HOME-ansible-tmp-本机的临时命令执行目录"><a href="#local-tmp-HOME-ansible-tmp-本机的临时命令执行目录" class="headerlink" title="#local_tmp=$HOME/.ansible/tmp  #本机的临时命令执行目录"></a>#local_tmp=$HOME/.ansible/tmp  #本机的临时命令执行目录</h4><h4 id="forks-5-默认的并发数"><a href="#forks-5-默认的并发数" class="headerlink" title="#forks =5  #默认的并发数"></a>#forks =5  #默认的并发数</h4><h4 id="sudo-user-root-默认的sudo用户"><a href="#sudo-user-root-默认的sudo用户" class="headerlink" title="#sudo-user=root #默认的sudo用户"></a>#sudo-user=root #默认的sudo用户</h4><h4 id="ask-sudo-pass-True-每次执行ansible命令是否询问ssh密码"><a href="#ask-sudo-pass-True-每次执行ansible命令是否询问ssh密码" class="headerlink" title="#ask-sudo-pass=True #每次执行ansible命令是否询问ssh密码"></a>#ask-sudo-pass=True #每次执行ansible命令是否询问ssh密码</h4><h4 id="ask-pass-True"><a href="#ask-pass-True" class="headerlink" title="#ask-pass=True"></a>#ask-pass=True</h4><h4 id="remote-port-22"><a href="#remote-port-22" class="headerlink" title="#remote-port=22"></a>#remote-port=22</h4><h4 id="host-key-checking-False-检测对应服务器的Host-key建议取消注释"><a href="#host-key-checking-False-检测对应服务器的Host-key建议取消注释" class="headerlink" title="#host-key-checking-False  #检测对应服务器的Host-key建议取消注释"></a>#host-key-checking-False  #检测对应服务器的Host-key建议取消注释</h4><h3 id="9，Ansible系列命令：没有注解的后面会详细说。"><a href="#9，Ansible系列命令：没有注解的后面会详细说。" class="headerlink" title="9，Ansible系列命令：没有注解的后面会详细说。"></a>9，Ansible系列命令：没有注解的后面会详细说。</h3><p>ansible</p><p>ansible-doc：显示模块帮助</p><p>​    ansible-doc [module]<br>    ansible-doc  -a : 显示所有模块的文档 （不常用）</p><p>​    ansible-doc  –list 列出所有的可用模块</p><p>eg:</p><p>​    ansible-doc  -s  ping ：-s的作用就是显示指定模块的playbook片段</p><p>​    ansible-doc  ping   :    查看指定模块(ping)的帮助用法 </p><p>​    ansible-doc   -l   :   列出所有模块</p><p>ansible-playbook</p><p>​    执行playbook的工具</p><p>ansible-vault</p><p>​    用于playbook的加密解密作用</p><p>ansible-console</p><p>ansible-galaxy</p><p>ansible-pull</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ansible02-配置文件及命令概览&quot;&gt;&lt;a href=&quot;#Ansible02-配置文件及命令概览&quot; class=&quot;headerlink&quot; title=&quot;Ansible02_配置文件及命令概览&quot;&gt;&lt;/a&gt;Ansible02_配置文件及命令概览&lt;/h2&gt;&lt;h3 i
      
    
    </summary>
    
      <category term="Ansible学习" scheme="https://jackLovewx.github.io/categories/Ansible%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Ansible" scheme="https://jackLovewx.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Ansible03_配置基于key的验证</title>
    <link href="https://jackLovewx.github.io/2018/11/27/Ansible03-%E9%85%8D%E7%BD%AE%E5%9F%BA%E4%BA%8Ekey%E7%9A%84%E9%AA%8C%E8%AF%81/"/>
    <id>https://jackLovewx.github.io/2018/11/27/Ansible03-配置基于key的验证/</id>
    <published>2018-11-27T14:15:24.000Z</published>
    <updated>2018-11-29T08:43:25.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible03-配置基于key的验证"><a href="#Ansible03-配置基于key的验证" class="headerlink" title="Ansible03_配置基于key的验证"></a>Ansible03_配置基于key的验证</h2><h3 id="0，ansible通过ssh实现配置管理，应用部署，任务执行等功能，建议配置ansible端基于秘钥认证的方式联系被管理的远程主机。"><a href="#0，ansible通过ssh实现配置管理，应用部署，任务执行等功能，建议配置ansible端基于秘钥认证的方式联系被管理的远程主机。" class="headerlink" title="0，ansible通过ssh实现配置管理，应用部署，任务执行等功能，建议配置ansible端基于秘钥认证的方式联系被管理的远程主机。"></a>0，ansible通过ssh实现配置管理，应用部署，任务执行等功能，建议配置ansible端基于秘钥认证的方式联系被管理的远程主机。</h3><h3 id="1，在安装完成之后，我们到对应的hosts文件下去配置远程主机："><a href="#1，在安装完成之后，我们到对应的hosts文件下去配置远程主机：" class="headerlink" title="1，在安装完成之后，我们到对应的hosts文件下去配置远程主机："></a>1，在安装完成之后，我们到对应的hosts文件下去配置远程主机：</h3><p>/etc/ansible/hosts：主机清单配置文件</p><p>​    风格：  [webservers]</p><p>​             192.168.10.128                    </p><p>​             192.168.10.129            或者  192.168.10.12[….]</p><p>​             192.168.10.130</p><p>2，配置完主机之后，接下来要与其他的主机建立连接，那么，如果按普通的方式，在链接的时候，需要对远程主机输入验证密码 也就是说在命令上加上  -k  这样未免也太过麻烦了。比如：</p><p>​    ansible webservers -m command  -k  -a   ‘  ls  /root  ‘</p><p>所以解决的方案就是来为每一台远程主机配置基于key的验证：</p><p>在终端输入以下命令：</p><p>​    1，ssh-keygen</p><p>​    2，ssh-copy-id    192.168.10.129  (有几个远程主机就加几个，重复执行即可)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ansible03-配置基于key的验证&quot;&gt;&lt;a href=&quot;#Ansible03-配置基于key的验证&quot; class=&quot;headerlink&quot; title=&quot;Ansible03_配置基于key的验证&quot;&gt;&lt;/a&gt;Ansible03_配置基于key的验证&lt;/h2&gt;&lt;
      
    
    </summary>
    
      <category term="Ansible学习" scheme="https://jackLovewx.github.io/categories/Ansible%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Ansible" scheme="https://jackLovewx.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Ansible04_ansible命令执行过程及常用模块</title>
    <link href="https://jackLovewx.github.io/2018/11/27/Ansible04-ansible%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/"/>
    <id>https://jackLovewx.github.io/2018/11/27/Ansible04-ansible命令执行过程及常用模块/</id>
    <published>2018-11-27T14:15:24.000Z</published>
    <updated>2018-12-03T06:56:52.734Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible04-ansible命令执行过程"><a href="#Ansible04-ansible命令执行过程" class="headerlink" title="Ansible04_ansible命令执行过程"></a>Ansible04_ansible命令执行过程</h2><h3 id="1，ansible命令执行过程："><a href="#1，ansible命令执行过程：" class="headerlink" title="1，ansible命令执行过程："></a>1，ansible命令执行过程：</h3><p>​    1，加载自己的配置文件，默认在目录  /etc/ansible/ansible.cfg</p><p>​    2，加载自己的模块文件，如command ping 等等</p><p>​    3，通过ansible将模块或者命令生成对应的临时py文件，并且将该文件传输至被控端的 $用户， </p><p>​         /.ansible/tmp/ansible-tmp-数字/xxxxx.py文件</p><p>​    4，给文件进行  +x  加执行权限操作</p><p>​    5，执行并且返回结果</p><p>​    6，删除临时文件，然后退出</p><h3 id="2，执行状态："><a href="#2，执行状态：" class="headerlink" title="2，执行状态："></a>2，执行状态：</h3><p>​    绿色：成功，不需要做改变的操作</p><p>​    黄色：成功，并且对目标主机进行了变更操作</p><p>​    红色：执行失败。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ansible04-ansible命令执行过程&quot;&gt;&lt;a href=&quot;#Ansible04-ansible命令执行过程&quot; class=&quot;headerlink&quot; title=&quot;Ansible04_ansible命令执行过程&quot;&gt;&lt;/a&gt;Ansible04_ansible
      
    
    </summary>
    
      <category term="Ansible学习" scheme="https://jackLovewx.github.io/categories/Ansible%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Ansible" scheme="https://jackLovewx.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Ansible01_运维自动化发展历程及技术应用</title>
    <link href="https://jackLovewx.github.io/2018/11/27/Ansible01-%E8%BF%90%E7%BB%B4%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8F%91%E5%B1%95%E5%8E%86%E7%A8%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%BA%94%E7%94%A8/"/>
    <id>https://jackLovewx.github.io/2018/11/27/Ansible01-运维自动化发展历程及技术应用/</id>
    <published>2018-11-27T01:15:56.000Z</published>
    <updated>2018-11-27T14:02:21.227Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible01-运维自动化发展历程及技术应用"><a href="#Ansible01-运维自动化发展历程及技术应用" class="headerlink" title="Ansible01_运维自动化发展历程及技术应用"></a>Ansible01_运维自动化发展历程及技术应用</h2><h3 id="一，发展历程"><a href="#一，发展历程" class="headerlink" title="一，发展历程"></a>一，发展历程</h3><p>1，on-premises:本地部署（硬件，操作系统，软件，全部自己做）</p><p>2，IAAS（Infrastracfure as a service）：基础设施即服务</p><p>3，PAAS（PlatForm as a service）:平台即服务</p><p>4，SAAS(SoftWare as a service): 软件即服务</p><h3 id="二，自动化运维应用场景"><a href="#二，自动化运维应用场景" class="headerlink" title="二，自动化运维应用场景"></a>二，自动化运维应用场景</h3><p>1,文件传输</p><p>2，命令执行： 应用部署，配置管理，任务流编排</p><h3 id="三，整体流程："><a href="#三，整体流程：" class="headerlink" title="三，整体流程："></a>三，整体流程：</h3><p>开发环境–&gt;测试环境–&gt;发布环境–&gt;生产环境–&gt;灰度环境（新版本更新，只发布服务器中的几台）</p><p>灰度环境分为： 基于用户的灰度环境和基于地区的灰度环境</p><h3 id="四：程序发布："><a href="#四：程序发布：" class="headerlink" title="四：程序发布："></a>四：程序发布：</h3><p>1，预发布验证：新版本代码发布到服务器(未接入调度器)</p><p>2，程序发布：不能影响用户的体验，不能造成系统的崩溃</p><p>3，灰度发布</p><p>4，发布路径：</p><p>​             /webapp/old-1.1</p><p>​                            /webapp/diaodu——&gt;指向正在使用的版本</p><p>​             /webapp/new-1.2</p><p>5，发布过程：</p><p>​            在调度器上下线一批主机（标记为maintanance状态）</p><p>​            关闭服务</p><p>​            部署新版本的应用程序</p><p>​            启动服务</p><p>​            在调度器上面启动这一批服务器</p><p>6，自动化灰度发布： 脚本发布平台</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ansible01-运维自动化发展历程及技术应用&quot;&gt;&lt;a href=&quot;#Ansible01-运维自动化发展历程及技术应用&quot; class=&quot;headerlink&quot; title=&quot;Ansible01_运维自动化发展历程及技术应用&quot;&gt;&lt;/a&gt;Ansible01_运维自动
      
    
    </summary>
    
      <category term="Ansible学习" scheme="https://jackLovewx.github.io/categories/Ansible%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Ansible" scheme="https://jackLovewx.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://jackLovewx.github.io/2018/11/26/test/"/>
    <id>https://jackLovewx.github.io/2018/11/26/test/</id>
    <published>2018-11-26T05:33:02.000Z</published>
    <updated>2018-11-26T05:33:32.275Z</updated>
    
    <content type="html"><![CDATA[<p>test</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;test&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HEXO_github与自己域名绑定</title>
    <link href="https://jackLovewx.github.io/2018/11/26/HEXO-github%E4%B8%8E%E8%87%AA%E5%B7%B1%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A/"/>
    <id>https://jackLovewx.github.io/2018/11/26/HEXO-github与自己域名绑定/</id>
    <published>2018-11-26T03:31:59.000Z</published>
    <updated>2018-11-26T05:14:04.677Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HEXO-github与自己域名绑定"><a href="#HEXO-github与自己域名绑定" class="headerlink" title="HEXO_github与自己域名绑定"></a>HEXO_github与自己域名绑定</h2><h3 id="1，首先登录阿里云，搜索域名或者在控制台找到域名。进入之后，首先查询你要申请的域名，如果查不到就表示可以注册。"><a href="#1，首先登录阿里云，搜索域名或者在控制台找到域名。进入之后，首先查询你要申请的域名，如果查不到就表示可以注册。" class="headerlink" title="1，首先登录阿里云，搜索域名或者在控制台找到域名。进入之后，首先查询你要申请的域名，如果查不到就表示可以注册。"></a>1，首先登录阿里云，搜索域名或者在控制台找到域名。进入之后，首先查询你要申请的域名，如果查不到就表示可以注册。</h3><h3 id="2，成功申请域名之后，将域名和Github绑定，Github的IP地址是192-30-252-153或192-30-252-154。所以我们在填写解析的时候，就解析这个地址。至于Github是怎么找到我们的仓库的，这个在CNAME设置。"><a href="#2，成功申请域名之后，将域名和Github绑定，Github的IP地址是192-30-252-153或192-30-252-154。所以我们在填写解析的时候，就解析这个地址。至于Github是怎么找到我们的仓库的，这个在CNAME设置。" class="headerlink" title="2，成功申请域名之后，将域名和Github绑定，Github的IP地址是192.30.252.153或192.30.252.154。所以我们在填写解析的时候，就解析这个地址。至于Github是怎么找到我们的仓库的，这个在CNAME设置。"></a>2，成功申请域名之后，将域名和Github绑定，Github的IP地址是192.30.252.153或192.30.252.154。所以我们在填写解析的时候，就解析这个地址。至于Github是怎么找到我们的仓库的，这个在CNAME设置。</h3><h3 id="3，进入域名解析之后"><a href="#3，进入域名解析之后" class="headerlink" title="3，进入域名解析之后"></a>3，进入域名解析之后</h3><h4 id="1，点击【新增解析】；依次填写相应内容。"><a href="#1，点击【新增解析】；依次填写相应内容。" class="headerlink" title="1，点击【新增解析】；依次填写相应内容。"></a>1，点击【新增解析】；依次填写相应内容。</h4><h4 id="2，“记录类型”选择A；”主机记录”填写www；”解析线路”选择默认；"><a href="#2，“记录类型”选择A；”主机记录”填写www；”解析线路”选择默认；" class="headerlink" title="2，“记录类型”选择A；”主机记录”填写www；”解析线路”选择默认；"></a>2，“记录类型”选择A；”主机记录”填写www；”解析线路”选择默认；</h4><h4 id="3，“记录值”填写github提供的IP地址，192-30-252-153或192-30-252-154；"><a href="#3，“记录值”填写github提供的IP地址，192-30-252-153或192-30-252-154；" class="headerlink" title="3，“记录值”填写github提供的IP地址，192.30.252.153或192.30.252.154；"></a>3，“记录值”填写github提供的IP地址，192.30.252.153或192.30.252.154；</h4><h4 id="4，“TTL”默认10分钟，自己可以另行设置也可；"><a href="#4，“TTL”默认10分钟，自己可以另行设置也可；" class="headerlink" title="4，“TTL”默认10分钟，自己可以另行设置也可；"></a>4，“TTL”默认10分钟，自己可以另行设置也可；</h4><h4 id="5，最后点击【保存】。"><a href="#5，最后点击【保存】。" class="headerlink" title="5，最后点击【保存】。"></a>5，最后点击【保存】。</h4><h4 id="6，域名成功解析之后，在你Github上面的仓库中创建CNAME，然后输入你申请域名的地址。然后你再输-入你的域名就可以访问Github博客了。"><a href="#6，域名成功解析之后，在你Github上面的仓库中创建CNAME，然后输入你申请域名的地址。然后你再输-入你的域名就可以访问Github博客了。" class="headerlink" title="6，域名成功解析之后，在你Github上面的仓库中创建CNAME，然后输入你申请域名的地址。然后你再输             入你的域名就可以访问Github博客了。"></a>6，域名成功解析之后，在你Github上面的仓库中创建CNAME，然后输入你申请域名的地址。然后你再输             入你的域名就可以访问Github博客了。</h4><h3 id="4，如果后面上传博客出404错误原因是在上传博客时CNAME文件没有了。所以解决办法就是"><a href="#4，如果后面上传博客出404错误原因是在上传博客时CNAME文件没有了。所以解决办法就是" class="headerlink" title="4，如果后面上传博客出404错误原因是在上传博客时CNAME文件没有了。所以解决办法就是"></a>4，如果后面上传博客出404错误原因是在上传博客时CNAME文件没有了。所以解决办法就是</h3><h3 id="进入自己的github在自己的仓库中重新创建CNAME文件，并添加自己的域名。"><a href="#进入自己的github在自己的仓库中重新创建CNAME文件，并添加自己的域名。" class="headerlink" title="进入自己的github在自己的仓库中重新创建CNAME文件，并添加自己的域名。"></a>进入自己的github在自己的仓库中重新创建CNAME文件，并添加自己的域名。</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HEXO-github与自己域名绑定&quot;&gt;&lt;a href=&quot;#HEXO-github与自己域名绑定&quot; class=&quot;headerlink&quot; title=&quot;HEXO_github与自己域名绑定&quot;&gt;&lt;/a&gt;HEXO_github与自己域名绑定&lt;/h2&gt;&lt;h3 id=&quot;1
      
    
    </summary>
    
      <category term="个人博客搭建" scheme="https://jackLovewx.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="https://jackLovewx.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>HEXO_添加live2d看板动画</title>
    <link href="https://jackLovewx.github.io/2018/11/26/HEXO-%E6%B7%BB%E5%8A%A0live2d%E7%9C%8B%E6%9D%BF%E5%8A%A8%E7%94%BB/"/>
    <id>https://jackLovewx.github.io/2018/11/26/HEXO-添加live2d看板动画/</id>
    <published>2018-11-26T02:53:37.000Z</published>
    <updated>2018-11-26T05:10:18.191Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HEXO-添加live2d看板动画"><a href="#HEXO-添加live2d看板动画" class="headerlink" title="HEXO_添加live2d看板动画"></a>HEXO_添加live2d看板动画</h2><h3 id="1-官网代码"><a href="#1-官网代码" class="headerlink" title="1,官网代码"></a>1,官网代码</h3><p>官网地址配置：<a href="https://www.npmjs.com/package/hexo-helper-live2d" target="_blank" rel="noopener">https://www.npmjs.com/package/hexo-helper-live2d</a></p><h3 id="2-按如下步骤执行"><a href="#2-按如下步骤执行" class="headerlink" title="2,按如下步骤执行"></a>2,按如下步骤执行</h3><p>1,首先检查博客主目录下面的  <code>package.json</code>里是否有<code>&quot;hexo-helper-live2d&quot;: &quot;^3.0.3&quot;,</code>依赖，有的话可以先卸载<br> 使用命令：<code>npm uninstall hexo-helper-live2d</code><br> 之后再安装：<code>npm install --save hexo-helper-live2d</code></p><p>2,下载各种动画model </p><p>地址：</p><p><a href="https://github.com/xiazeyu/live2d-widget-models.git" target="_blank" rel="noopener">https://github.com/xiazeyu/live2d-widget-models.git</a></p><p>3,下载好之后将packages里的所有动画模板拷贝到博客的node_modules目录里</p><p>4,配置博客站点配置文件，_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-epsilon2_1  #模板目录，在node_modules里</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150 </span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: false  #是否在手机进行显示</span><br></pre></td></tr></table></figure><p>5,开始部署:</p><p>​    hexo clean   </p><p>​    hexo g -d</p><p>6,效果图：</p><p><img src="/2018/11/26/HEXO-添加live2d看板动画/1.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HEXO-添加live2d看板动画&quot;&gt;&lt;a href=&quot;#HEXO-添加live2d看板动画&quot; class=&quot;headerlink&quot; title=&quot;HEXO_添加live2d看板动画&quot;&gt;&lt;/a&gt;HEXO_添加live2d看板动画&lt;/h2&gt;&lt;h3 id=&quot;1-官网代
      
    
    </summary>
    
      <category term="个人博客搭建" scheme="https://jackLovewx.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="https://jackLovewx.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>HEXO_更换背景图片</title>
    <link href="https://jackLovewx.github.io/2018/11/23/HEXO-%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87/"/>
    <id>https://jackLovewx.github.io/2018/11/23/HEXO-更换背景图片/</id>
    <published>2018-11-23T09:16:50.000Z</published>
    <updated>2018-11-26T05:21:38.601Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HEXO-更换背景图片"><a href="#HEXO-更换背景图片" class="headerlink" title="HEXO_更换背景图片"></a>HEXO_更换背景图片</h2><h3 id="1-背景图片来源-（可根据自己的喜好设置图片的url）"><a href="#1-背景图片来源-（可根据自己的喜好设置图片的url）" class="headerlink" title="1,背景图片来源 （可根据自己的喜好设置图片的url）"></a>1,背景图片来源 （可根据自己的喜好设置图片的url）</h3><h3 id="2，修改背景样式"><a href="#2，修改背景样式" class="headerlink" title="2，修改背景样式"></a>2，修改背景样式</h3><p>打开文档下themes\next\source\css\ _custom\custom.styl文件，这个是Next故意留给用户自己个性化定制一些样式的文件，添加以下代码：</p><p>body {<br>    background:url(<a href="https://source.unsplash.com/random/1600x900)" target="_blank" rel="noopener">https://source.unsplash.com/random/1600x900)</a>;<br>    background-repeat: repeat;<br>    background-attachment:fixed;<br>    background-position:50% 50%;<br>}<br>url可更换为自己喜欢的图片的地址。</p><p>repeat：是否重复出现</p><p>attachment：定义背景图片随滚动轴的移动方式</p><p>position：设置背景图像的起始位置。</p><h3 id="3，效果图："><a href="#3，效果图：" class="headerlink" title="3，效果图："></a>3，效果图：</h3><p><img src="/2018/11/23/HEXO-更换背景图片/1.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HEXO-更换背景图片&quot;&gt;&lt;a href=&quot;#HEXO-更换背景图片&quot; class=&quot;headerlink&quot; title=&quot;HEXO_更换背景图片&quot;&gt;&lt;/a&gt;HEXO_更换背景图片&lt;/h2&gt;&lt;h3 id=&quot;1-背景图片来源-（可根据自己的喜好设置图片的url）&quot;&gt;
      
    
    </summary>
    
      <category term="个人博客搭建" scheme="https://jackLovewx.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="https://jackLovewx.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>HEXO_添加站内搜索</title>
    <link href="https://jackLovewx.github.io/2018/11/23/HEXO-%E6%B7%BB%E5%8A%A0%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/"/>
    <id>https://jackLovewx.github.io/2018/11/23/HEXO-添加站内搜索/</id>
    <published>2018-11-23T03:07:43.000Z</published>
    <updated>2018-11-23T03:25:47.681Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HEXO-添加站内搜索"><a href="#HEXO-添加站内搜索" class="headerlink" title="HEXO_添加站内搜索"></a>HEXO_添加站内搜索</h2><h3 id="1-NexT主题支持集成-Swiftype、-微搜索、Local-Search-和-Algolia。下面介绍Local-Search的安装。"><a href="#1-NexT主题支持集成-Swiftype、-微搜索、Local-Search-和-Algolia。下面介绍Local-Search的安装。" class="headerlink" title="1,NexT主题支持集成 Swiftype、 微搜索、Local Search 和 Algolia。下面介绍Local Search的安装。"></a>1,NexT主题支持集成 Swiftype、 微搜索、Local Search 和 Algolia。下面介绍Local Search的安装。</h3><h3 id="2-安装-hexo-generator-search"><a href="#2-安装-hexo-generator-search" class="headerlink" title="2,安装 hexo-generator-search"></a>2,安装 hexo-generator-search</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><h3 id="3-安装-hexo-generator-searchdb"><a href="#3-安装-hexo-generator-searchdb" class="headerlink" title="3,安装 hexo-generator-searchdb"></a>3,安装 hexo-generator-searchdb</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><h3 id="4-编辑站点配置文件，添加以下内容"><a href="#4-编辑站点配置文件，添加以下内容" class="headerlink" title="4,编辑站点配置文件，添加以下内容 :"></a>4,编辑站点配置文件，添加以下内容 :</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><h3 id="5-编辑主题配置文件，设置Local-searchenable为ture"><a href="#5-编辑主题配置文件，设置Local-searchenable为ture" class="headerlink" title="5,编辑主题配置文件，设置Local searchenable为ture"></a>5,编辑主题配置文件，设置<code>Local search</code>enable为<code>ture</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line"># Dependencies: https://github.com/flashlab/hexo-generator-search</span><br><span class="line">local_search:</span><br><span class="line">  enable: ture</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure><h3 id="6-效果如下图所示："><a href="#6-效果如下图所示：" class="headerlink" title="6, 效果如下图所示："></a>6, 效果如下图所示：</h3><p><img src="/2018/11/23/HEXO-添加站内搜索/1.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HEXO-添加站内搜索&quot;&gt;&lt;a href=&quot;#HEXO-添加站内搜索&quot; class=&quot;headerlink&quot; title=&quot;HEXO_添加站内搜索&quot;&gt;&lt;/a&gt;HEXO_添加站内搜索&lt;/h2&gt;&lt;h3 id=&quot;1-NexT主题支持集成-Swiftype、-微搜索、Lo
      
    
    </summary>
    
      <category term="个人博客搭建" scheme="https://jackLovewx.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="https://jackLovewx.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>HEXO_在文章底部增加版权信息</title>
    <link href="https://jackLovewx.github.io/2018/11/23/HEXO-%E5%9C%A8%E6%96%87%E7%AB%A0%E5%BA%95%E9%83%A8%E5%A2%9E%E5%8A%A0%E7%89%88%E6%9D%83%E4%BF%A1%E6%81%AF/"/>
    <id>https://jackLovewx.github.io/2018/11/23/HEXO-在文章底部增加版权信息/</id>
    <published>2018-11-23T02:49:10.000Z</published>
    <updated>2018-11-26T05:19:40.161Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HEXO-在文章底部增加版权信息"><a href="#HEXO-在文章底部增加版权信息" class="headerlink" title="HEXO_在文章底部增加版权信息"></a>HEXO_在文章底部增加版权信息</h2><h3 id="1-在目录Blog-themes-next-layout-macro-，添加文件-my-copyright-swig，内容如下："><a href="#1-在目录Blog-themes-next-layout-macro-，添加文件-my-copyright-swig，内容如下：" class="headerlink" title="1,在目录Blog/themes/next/layout/_macro/，添加文件 my-copyright.swig，内容如下："></a>1,在目录<code>Blog/themes/next/layout/_macro/</code>，添加文件 <code>my-copyright.swig</code>，内容如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line">&lt;div class=&quot;my_post_copyright&quot;&gt;</span><br><span class="line">  &lt;script src=&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;!-- JS库 sweetalert 可修改路径 --&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://unpkg.com/sweetalert/dist/sweetalert.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href=&quot;/&quot; title=&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &lt;span class=&quot;copy-path&quot;  title=&quot;点击复制文章链接&quot;&gt;&lt;i class=&quot;fa fa-clipboard&quot; data-clipboard-text=&quot;&#123;&#123; page.permalink &#125;&#125;&quot;  aria-label=&quot;复制成功！&quot;&gt;&lt;/i&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot; target=&quot;_blank&quot; title=&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt;  </span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt; </span><br><span class="line">    var clipboard = new Clipboard(&apos;.fa-clipboard&apos;);</span><br><span class="line">    $(&quot;.fa-clipboard&quot;).click(function()&#123;</span><br><span class="line">      clipboard.on(&apos;success&apos;, function()&#123;</span><br><span class="line">        swal(&#123;   </span><br><span class="line">          title: &quot;&quot;,   </span><br><span class="line">          text: &apos;复制成功&apos;,</span><br><span class="line">          icon: &quot;success&quot;, </span><br><span class="line">          showConfirmButton: true</span><br><span class="line">          &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;);  </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="2-在目录Blog-themes-next-source-css-common-components-post-下添加文件my-post-copyright-styl，添加以下代码："><a href="#2-在目录Blog-themes-next-source-css-common-components-post-下添加文件my-post-copyright-styl，添加以下代码：" class="headerlink" title="2,在目录Blog/themes/next/source/css/_common/components/post/下添加文件my-post-copyright.styl，添加以下代码："></a>2,在目录<code>Blog/themes/next/source/css/_common/components/post/</code>下添加文件<code>my-post-copyright.styl</code>，添加以下代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.my_post_copyright &#123;</span><br><span class="line">  width: 85%;</span><br><span class="line">  max-width: 45em;</span><br><span class="line">  margin: 2.8em auto 0;</span><br><span class="line">  padding: 0.5em 1.0em;</span><br><span class="line">  border: 1px solid #d3d3d3;</span><br><span class="line">  font-size: 0.93rem;</span><br><span class="line">  line-height: 1.6em;</span><br><span class="line">  word-break: break-all;</span><br><span class="line">  background: rgba(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright p&#123;margin:0;&#125;</span><br><span class="line">.my_post_copyright span &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width: 5.2em;</span><br><span class="line">  color: #b5b5b5;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .raw &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 5em;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  border-bottom:0;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a:hover &#123;</span><br><span class="line">  color: #a3d2a3;</span><br><span class="line">  text-decoration: underline;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright:hover .fa-clipboard &#123;</span><br><span class="line">  color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .post-url:hover &#123;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 1em;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path:hover &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-在Blog-themes-next-source-css-common-components-post-添加文件my-post-copyright-styl，文件内容如下："><a href="#3-在Blog-themes-next-source-css-common-components-post-添加文件my-post-copyright-styl，文件内容如下：" class="headerlink" title="3,在Blog/themes/next/source/css/_common/components/post/添加文件my-post-copyright.styl，文件内容如下："></a>3,在<code>Blog/themes/next/source/css/_common/components/post/</code>添加文件<code>my-post-copyright.styl</code>，文件内容如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.my_post_copyright &#123;</span><br><span class="line">  width: 85%;</span><br><span class="line">  max-width: 45em;</span><br><span class="line">  margin: 2.8em auto 0;</span><br><span class="line">  padding: 0.5em 1.0em;</span><br><span class="line">  border: 1px solid #d3d3d3;</span><br><span class="line">  font-size: 0.93rem;</span><br><span class="line">  line-height: 1.6em;</span><br><span class="line">  word-break: break-all;</span><br><span class="line">  background: rgba(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright p&#123;margin:0;&#125;</span><br><span class="line">.my_post_copyright span &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width: 5.2em;</span><br><span class="line">  color: #b5b5b5;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .raw &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 5em;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  border-bottom:0;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a:hover &#123;</span><br><span class="line">  color: #a3d2a3;</span><br><span class="line">  text-decoration: underline;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright:hover .fa-clipboard &#123;</span><br><span class="line">  color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .post-url:hover &#123;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 1em;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path:hover &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-修改Blog-themes-next-layout-macro-post-swig，在如图位置添加以下代码："><a href="#4-修改Blog-themes-next-layout-macro-post-swig，在如图位置添加以下代码：" class="headerlink" title="4,修改Blog/themes/next/layout/_macro/post.swig，在如图位置添加以下代码："></a>4,修改<code>Blog/themes/next/layout/_macro/post.swig</code>，在如图位置添加以下代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &apos;my-copyright.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p> <img src="/2018/11/23/HEXO-在文章底部增加版权信息/1.png" alt=""></p><h3 id="5-在Blog-themes-next-source-css-common-components-post-post-styl文件最后加入下面的代码："><a href="#5-在Blog-themes-next-source-css-common-components-post-post-styl文件最后加入下面的代码：" class="headerlink" title="5,在Blog/themes/next/source/css/_common/components/post/post.styl文件最后加入下面的代码："></a>5,在<code>Blog/themes/next/source/css/_common/components/post/post.styl</code>文件最后加入下面的代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;my-post-copyright&quot;</span><br></pre></td></tr></table></figure><h3 id="6-在Markdown文章中加入copyright-ture："><a href="#6-在Markdown文章中加入copyright-ture：" class="headerlink" title="6.在Markdown文章中加入copyright : ture："></a>6.在Markdown文章中加入<code>copyright : ture</code>：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo-NexT主题配置</span><br><span class="line">date: 2018-01-20 20:41:08</span><br><span class="line">categories: Hexo</span><br><span class="line">tags:</span><br><span class="line">- Hexo</span><br><span class="line">- NexT</span><br><span class="line">top: 100</span><br><span class="line">copyright: ture</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="7-配置根目录下的-config-yml文件，配置为："><a href="#7-配置根目录下的-config-yml文件，配置为：" class="headerlink" title="7,配置根目录下的_config.yml文件，配置为："></a>7,配置根目录下的<code>_config.yml</code>文件，配置为：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: https://jackLovewx.github.io/  //你的网站地址</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><h3 id="8-效果图如下所示："><a href="#8-效果图如下所示：" class="headerlink" title="8,效果图如下所示："></a>8,效果图如下所示：</h3><p> <img src="/2018/11/23/HEXO-在文章底部增加版权信息/2.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HEXO-在文章底部增加版权信息&quot;&gt;&lt;a href=&quot;#HEXO-在文章底部增加版权信息&quot; class=&quot;headerlink&quot; title=&quot;HEXO_在文章底部增加版权信息&quot;&gt;&lt;/a&gt;HEXO_在文章底部增加版权信息&lt;/h2&gt;&lt;h3 id=&quot;1-在目录Blog
      
    
    </summary>
    
      <category term="个人博客搭建" scheme="https://jackLovewx.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="https://jackLovewx.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>HEXO_添加侧栏推荐阅读</title>
    <link href="https://jackLovewx.github.io/2018/11/23/HEXO-%E6%B7%BB%E5%8A%A0%E4%BE%A7%E6%A0%8F%E6%8E%A8%E8%8D%90%E9%98%85%E8%AF%BB/"/>
    <id>https://jackLovewx.github.io/2018/11/23/HEXO-添加侧栏推荐阅读/</id>
    <published>2018-11-23T02:32:02.000Z</published>
    <updated>2018-11-26T05:18:20.578Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HEXO-添加侧栏推荐阅读"><a href="#HEXO-添加侧栏推荐阅读" class="headerlink" title="HEXO_添加侧栏推荐阅读"></a>HEXO_添加侧栏推荐阅读</h2><h3 id="1-编辑主题配置文件，如下配置即可："><a href="#1-编辑主题配置文件，如下配置即可：" class="headerlink" title="1,编辑主题配置文件，如下配置即可："></a>1,编辑主题配置文件，如下配置即可：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Blog rolls</span><br><span class="line">links_icon: link</span><br><span class="line">links_title: 推荐阅读</span><br><span class="line">#links_layout: block</span><br><span class="line">links_layout: inline</span><br><span class="line">links:</span><br><span class="line">  HEXO个人博客初级搭建: https://jacklovewx.github.io/2018/11/20/HEXO%E5%88%9D%E7%BA%A7%E6%90%AD%E5%BB%BA/#more</span><br><span class="line">  百 度: http://www.baidu.com</span><br></pre></td></tr></table></figure><h3 id="2-效果图："><a href="#2-效果图：" class="headerlink" title="2,效果图："></a>2,效果图：</h3><p><img src="/2018/11/23/HEXO-添加侧栏推荐阅读/1.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HEXO-添加侧栏推荐阅读&quot;&gt;&lt;a href=&quot;#HEXO-添加侧栏推荐阅读&quot; class=&quot;headerlink&quot; title=&quot;HEXO_添加侧栏推荐阅读&quot;&gt;&lt;/a&gt;HEXO_添加侧栏推荐阅读&lt;/h2&gt;&lt;h3 id=&quot;1-编辑主题配置文件，如下配置即可：&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="个人博客搭建" scheme="https://jackLovewx.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="https://jackLovewx.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>HEXO_添加底部桃心</title>
    <link href="https://jackLovewx.github.io/2018/11/23/HEXO-%E6%B7%BB%E5%8A%A0%E5%BA%95%E9%83%A8%E6%A1%83%E5%BF%83/"/>
    <id>https://jackLovewx.github.io/2018/11/23/HEXO-添加底部桃心/</id>
    <published>2018-11-23T02:21:36.000Z</published>
    <updated>2018-11-26T05:18:27.670Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HEXO-添加底部桃心"><a href="#HEXO-添加底部桃心" class="headerlink" title="HEXO_添加底部桃心"></a>HEXO_添加底部桃心</h2><h3 id="1-打开Blog-themes-next-layout-partials-footer-swig搜索with-love，在fontawesom找到你喜欢的图标，在如下位置替换即可："><a href="#1-打开Blog-themes-next-layout-partials-footer-swig搜索with-love，在fontawesom找到你喜欢的图标，在如下位置替换即可：" class="headerlink" title="1,打开Blog/themes/next/layout/_partials/footer.swig搜索with-love，在fontawesom找到你喜欢的图标，在如下位置替换即可："></a>1,打开<code>Blog/themes/next/layout/_partials/footer.swig</code>搜索<code>with-love</code>，在<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">fontawesom</a>找到你喜欢的图标，在如下位置替换即可：</h3><p><img src="/2018/11/23/HEXO-添加底部桃心/1.png" alt=""></p><h3 id="2-效果如下图所示："><a href="#2-效果如下图所示：" class="headerlink" title="2,效果如下图所示："></a>2,效果如下图所示：</h3><p><img src="/2018/11/23/HEXO-添加底部桃心/2.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HEXO-添加底部桃心&quot;&gt;&lt;a href=&quot;#HEXO-添加底部桃心&quot; class=&quot;headerlink&quot; title=&quot;HEXO_添加底部桃心&quot;&gt;&lt;/a&gt;HEXO_添加底部桃心&lt;/h2&gt;&lt;h3 id=&quot;1-打开Blog-themes-next-layout-p
      
    
    </summary>
    
      <category term="个人博客搭建" scheme="https://jackLovewx.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="https://jackLovewx.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
